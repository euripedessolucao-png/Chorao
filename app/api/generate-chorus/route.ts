import { type NextRequest, NextResponse } from "next/server"
import { generateText } from "ai"
import { getGenreConfig, detectSubGenre, getGenreRhythm } from "@/lib/genre-config"
import { capitalizeLines } from "@/lib/utils/capitalize-lyrics"

export async function POST(request: NextRequest) {
  try {
    const { genre, theme, mood, additionalRequirements, lyrics, advancedMode } = await request.json()

    if (!genre || !theme) {
      return NextResponse.json({ error: "G√™nero e tema s√£o obrigat√≥rios" }, { status: 400 })
    }

    if (!lyrics) {
      return NextResponse.json(
        { error: "Letra base √© obrigat√≥ria. Cole a letra na aba Reescrever antes de gerar o refr√£o." },
        { status: 400 },
      )
    }

    const genreConfig = getGenreConfig(genre)
    const subGenreInfo = detectSubGenre(additionalRequirements)
    const defaultRhythm = getGenreRhythm(genre)
    const finalRhythm = subGenreInfo.rhythm || defaultRhythm

    const lyricsContext = `
üìù LETRA EXISTENTE (CONTEXTO OBRIGAT√ìRIO):
${lyrics}

üéØ O REFR√ÉO DEVE:
- Conectar-se PERFEITAMENTE com esta letra
- Usar o MESMO tom emocional e linguagem
- Manter TOTAL coer√™ncia com a hist√≥ria
- Parecer parte NATURAL desta composi√ß√£o
- Ser o MOMENTO MAIS MEMOR√ÅVEL da m√∫sica
- GRUDAR NA CABE√áA na primeira escuta
${subGenreInfo.subGenre ? `- Seguir o ritmo de ${subGenreInfo.styleNote}` : ""}
`

    const universalRules = `
üéØ F√ìRMULA DE REFR√ÉO DE SUCESSO 2024-2025

PRIORIDADE ABSOLUTA:
1. GANCHO GRUDENTO (primeira linha deve grudar na cabe√ßa)
2. FRASES COMPLETAS E COERENTES (NUNCA corte no meio)
3. LINGUAGEM COLOQUIAL BRASILEIRA INTENSA
4. F√ÅCIL DE CANTAR JUNTO (karaok√™-friendly)
5. REPETI√á√ÉO ESTRAT√âGICA de palavras-chave

CARACTER√çSTICAS DE HIT:
- M√°ximo 4 linhas, cada uma com 8-10 s√≠labas
- Frases simples, diretas, memor√°veis
- Palavras do dia-a-dia ("c√™", "t√¥", "pra", "n√©")
- Cada linha faz sentido sozinha
- Melodia impl√≠cita grudenta

EXEMPLOS DE HITS 2024-2025:
‚úì "C√™ me testa, olha e sorri" (direto, visual, grudento)
‚úì "Saudade √© punhal cravado no peito" (met√°fora concreta, impactante)
‚úì "T√¥ no meu flow, meu beat √© pesado" (confiante, repetitivo)

EVITE:
‚úó Frases incompletas ("Voc√™ me faz..." - ERRADO)
‚úó Vocabul√°rio rebuscado ("flores√ßo", "bonan√ßa")
‚úó Abstra√ß√µes vagas ("mar de dor", "alma perdida")
‚úó Rimas for√ßadas que quebram naturalidade
`

    const advancedModeRules = advancedMode
      ? `
üî• MODO AVAN√áADO - CRIT√âRIOS DE HIT

GANCHO PREMIUM:
- Primeira linha DEVE ser o gancho principal
- Teste: Se n√£o grudar em 3 segundos, refa√ßa
- Melodia impl√≠cita clara e memor√°vel

RIMAS PERFEITAS:
- M√≠nimo 50% de rimas ricas
- Zero rimas falsas ou for√ßadas
- Rimas naturais da narrativa

LINGUAGEM LIMPA:
- Adequado para r√°dio e streaming
- Zero palavr√µes pesados
- Respeito e bom gosto

M√âTRICA COMERCIAL:
- 8-10 s√≠labas por linha (ideal para melodia)
- Respira√ß√£o natural garantida
- F√°cil de cantar em karaok√™
`
      : ""

    const metaforasRule = additionalRequirements
      ? `\n‚ö° REQUISITOS ESPECIAIS (PRIORIDADE M√ÅXIMA):
${additionalRequirements}

Se met√°foras especificadas, s√£o OBRIGAT√ìRIAS no refr√£o.`
      : ""

    const prompt = `${universalRules}
${advancedModeRules}
${metaforasRule}

${lyricsContext}

üéµ Voc√™ √© um compositor PROFISSIONAL especializado em criar REFR√ïES DE HIT.

Seu objetivo: Criar refr√µes que GRUDEM NA CABE√áA e fa√ßam SUCESSO nas plataformas.

ESPECIFICA√á√ïES:
- G√™nero: ${genre}
- Ritmo: ${finalRhythm}
- Tema: ${theme}
- Humor: ${mood || "neutro"}

PROCESSO PARA CADA VARIA√á√ÉO:
1. Identifique o GANCHO principal (frase que vai grudar)
2. Construa em torno do gancho com frases completas
3. Teste mental: √â f√°cil de cantar junto?
4. Verifique: Conecta com a letra existente?

REGRAS ESTRUTURAIS:
- 4 linhas por refr√£o (padr√£o comercial)
- Cada linha: 8-10 s√≠labas (ideal para melodia)
- CADA LINHA = FRASE COMPLETA
- Primeira linha = GANCHO PRINCIPAL
- Repeti√ß√£o estrat√©gica de palavras-chave

DIVERSIDADE CRIATIVA (5 ESTILOS):
1. CHICLETE RADIOF√îNICO: Repeti√ß√£o estrat√©gica, grudento
2. VISUAL E DIRETO: Cena clara, imagem concreta
3. BORD√ÉO IMPACTANTE: Frase marcante, quotable
4. EMOCIONAL E LEVE: Vulnerabilidade aut√™ntica
5. SURPREENDENTE: Abordagem inesperada, criativa

FORMATO JSON:
{
  "variations": [
    {
      "chorus": "linha 1 (GANCHO)\\nlinha 2 completa\\nlinha 3 completa\\nlinha 4 completa",
      "style": "Estilo (ex: Chiclete Radiof√¥nico)",
      "score": 8-10,
      "hookLine": "A linha que vai grudar na cabe√ßa",
      "commercialAppeal": "Por que vai fazer sucesso",
      "singAlongFactor": "Por que √© f√°cil cantar junto"
    }
  ],
  "bestCommercialOptionIndex": 0-4
}

CRIT√âRIOS DE SCORE:
- 10: Hit garantido, gruda na primeira escuta
- 9: Muito forte, potencial de sucesso alto
- 8: Bom comercialmente, funciona bem
- <8: Refa√ßa, n√£o atinge padr√£o de hit

IMPORTANTE:
- Use contexto da letra existente
- Cada varia√ß√£o TOTALMENTE DIFERENTE
- Todos scores 8-10 (padr√£o de hit)
- Melhor op√ß√£o: score 10
- GANCHO na primeira linha sempre
- Frases completas e coerentes

Gere as 5 varia√ß√µes de REFR√ÉO DE HIT agora:`

    console.log("[v0] Gerando refr√£o otimizado para hit 2024-2025...")

    const { text } = await generateText({
      model: "openai/gpt-4o",
      prompt,
      temperature: 0.9, // Alta criatividade para hits
    })

    const jsonMatch = text.match(/\{[\s\S]*\}/)
    if (!jsonMatch) {
      throw new Error("Resposta da IA n√£o est√° no formato JSON esperado")
    }

    const result = JSON.parse(jsonMatch[0])

    if (result.variations && Array.isArray(result.variations)) {
      result.variations = result.variations.map((variation: any) => ({
        ...variation,
        chorus: capitalizeLines(variation.chorus),
      }))
    }

    console.log("[v0] ‚úÖ Refr√£o de hit gerado com sucesso!")

    return NextResponse.json(result)
  } catch (error) {
    console.error("[v0] ‚ùå Erro ao gerar refr√£o:", error)
    return NextResponse.json(
      {
        error: error instanceof Error ? error.message : "Erro ao gerar refr√£o",
      },
      { status: 500 },
    )
  }
}
