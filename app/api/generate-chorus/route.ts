import { type NextRequest, NextResponse } from "next/server"
import { generateText } from "ai"
import { getGenreConfig, detectSubGenre } from "@/lib/genre-config"
import { capitalizeLines } from "@/lib/utils/capitalize-lyrics"

export async function POST(request: NextRequest) {
  try {
    const { genre, theme, mood, additionalRequirements, lyrics } = await request.json()

    if (!genre || !theme) {
      return NextResponse.json({ error: "G√™nero e tema s√£o obrigat√≥rios" }, { status: 400 })
    }

    if (!lyrics) {
      return NextResponse.json(
        { error: "Letra base √© obrigat√≥ria. Cole a letra na aba Reescrever antes de gerar o refr√£o." },
        { status: 400 },
      )
    }

    const genreConfig = getGenreConfig(genre)
    const subGenreInfo = detectSubGenre(additionalRequirements)

    const lyricsContext = `
LETRA EXISTENTE (CONTEXTO OBRIGAT√ìRIO):
${lyrics}

IMPORTANTE: O refr√£o DEVE:
- Conectar-se tematicamente com esta letra
- Usar o mesmo tom emocional
- Manter coer√™ncia com a hist√≥ria/narrativa
- Parecer parte natural desta composi√ß√£o
- Respeitar o estilo e linguagem estabelecidos
${subGenreInfo.subGenre ? `- Seguir o ritmo de ${subGenreInfo.styleNote}` : ""}
`

    const universalRules = `
üéµ REGRAS UNIVERSAIS - TERCEIRA VIA

1. LINGUAGEM SIMPLES E BRASILEIRA
   - Palavras do dia-a-dia, coloquiais
   - PROIBIDO: rebuscado, po√©tico, liter√°rio
   - PERMITIDO: g√≠rias, contra√ß√µes ("t√¥", "c√™", "pra")

2. M√âTRICA (12 S√çLABAS M√ÅXIMO - REGRA ABSOLUTA)
   - Cada verso cabe em um f√¥lego natural
   - M√ÅXIMO 12 S√çLABAS PO√âTICAS (INVIOL√ÅVEL)
   - Se necess√°rio, simplifique para respeitar o limite
   - Versos empilhados (um por linha)

3. PROCESSO TERCEIRA VIA PARA REFR√ÉO
   - (A) M√©trica/Ritmo: fluidez e respira√ß√£o (m√°x 12 s√≠labas)
   - (B) Emo√ß√£o/Gancho: memor√°vel e aut√™ntico
   - (C) S√≠ntese: combine A+B = refr√£o grudento (RESPEITANDO 12 s√≠labas)
   
IMPORTANTE NA S√çNTESE (C):
- NUNCA exceda 12 s√≠labas, mesmo que precise cortar palavras
- Priorize: 1¬∫ Limite de s√≠labas, 2¬∫ Emo√ß√£o, 3¬∫ Rima
`

    const metaforasRule = additionalRequirements
      ? `\nREQUISITOS ADICIONAIS (PRIORIDADE ABSOLUTA):
${additionalRequirements}

MET√ÅFORAS: Se especificadas, s√£o OBRIGAT√ìRIAS no refr√£o.`
      : ""

    const prompt = `${universalRules}${metaforasRule}

${lyricsContext}

Voc√™ √© um compositor profissional especializado em refr√µes comerciais.

TAREFA: Gere 5 varia√ß√µes de refr√£o aplicando TERCEIRA VIA.

ESPECIFICA√á√ïES:
- G√™nero: ${genre}
- Tema: ${theme}
- Humor: ${mood || "neutro"}

PROCESSO PARA CADA VARIA√á√ÉO:
1. Gere vers√£o (A): foco em M√âTRICA e FLUIDEZ (m√°x 12 s√≠labas/verso)
2. Gere vers√£o (B): foco em EMO√á√ÉO e GANCHO (memor√°vel, aut√™ntico)
3. S√≠ntese (C): combine o melhor de A e B = refr√£o final
   ATEN√á√ÉO: A s√≠ntese NUNCA pode exceder 12 s√≠labas por verso
   Se necess√°rio, simplifique palavras ou use contra√ß√µes

REGRAS ESTRUTURAIS:
- 2 ou 4 linhas por refr√£o (NUNCA 3)
- Versos empilhados (um por linha)
- M√°ximo 4 linhas total
- CRIATIVIDADE: cada op√ß√£o deve ser √öNICA

REGRAS DE PROS√ìDIA (${genreConfig.name}):
- Com v√≠rgula: m√°x ${genreConfig.prosody_rules.syllable_count.with_comma.max_before_comma} s√≠labas antes, ${genreConfig.prosody_rules.syllable_count.with_comma.max_after_comma} depois
- Sem v√≠rgula: ${genreConfig.prosody_rules.syllable_count.without_comma.min}-${genreConfig.prosody_rules.syllable_count.without_comma.max} s√≠labas

DIVERSIDADE CRIATIVA (OBRIGAT√ìRIA):
- Op√ß√£o 1: Chiclete radiof√¥nico (repeti√ß√£o estrat√©gica)
- Op√ß√£o 2: Visual e direto (cena clara)
- Op√ß√£o 3: Bord√£o impactante (frase marcante)
- Op√ß√£o 4: Emocional e leve (vulnerabilidade)
- Op√ß√£o 5: Surpreendente (abordagem inesperada)

FORMATO JSON:
{
  "variations": [
    {
      "chorus": "linha 1\\nlinha 2\\nlinha 3\\nlinha 4",
      "style": "Descri√ß√£o do estilo",
      "score": 1-10,
      "justification": "Por que funciona comercialmente",
      "terceiraViaProcess": {
        "metricVersion": "vers√£o A (m√©trica)",
        "emotionalVersion": "vers√£o B (emo√ß√£o)",
        "synthesis": "vers√£o C final (s√≠ntese)"
      }
    }
  ],
  "bestCommercialOptionIndex": 0-4
}

IMPORTANTE:
- Use o contexto da letra existente
- Cada varia√ß√£o COMPLETAMENTE DIFERENTE
- Scores entre 7-10
- Melhor op√ß√£o: score 9-10
- Use "\\n" para separar linhas

Gere as 5 varia√ß√µes CRIATIVAS agora:`

    console.log("[v0] Gerando refr√£o com Terceira Via e contexto da letra...")

    const { text } = await generateText({
      model: "openai/gpt-4o",
      prompt,
      temperature: 0.9,
    })

    const jsonMatch = text.match(/\{[\s\S]*\}/)
    if (!jsonMatch) {
      throw new Error("Resposta da IA n√£o est√° no formato JSON esperado")
    }

    const result = JSON.parse(jsonMatch[0])

    if (result.variations && Array.isArray(result.variations)) {
      result.variations = result.variations.map((variation: any) => ({
        ...variation,
        chorus: capitalizeLines(variation.chorus),
      }))
    }

    console.log("[v0] Refr√£o gerado com sucesso usando Terceira Via")

    return NextResponse.json(result)
  } catch (error) {
    console.error("[v0] Erro ao gerar refr√£o:", error)
    return NextResponse.json(
      {
        error: error instanceof Error ? error.message : "Erro ao gerar refr√£o",
      },
      { status: 500 },
    )
  }
}
