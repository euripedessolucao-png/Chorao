import { NextResponse } from "next/server"
import { generateText } from "ai"
import { getGenreConfig, detectSubGenre, getGenreRhythm } from "@/lib/genre-config"
import { capitalizeLines } from "@/lib/utils/capitalize-lyrics"

export async function POST(request: Request) {
  try {
    const { lyrics, genre, additionalRequirements, advancedMode } = await request.json()

    if (!lyrics) {
      return NextResponse.json({ error: "Letra √© obrigat√≥ria" }, { status: 400 })
    }

    const genreConfig = genre ? getGenreConfig(genre) : null
    const subGenreInfo = detectSubGenre(additionalRequirements || "")
    const defaultRhythm = genre ? getGenreRhythm(genre) : "Brasileiro"
    const finalRhythm = subGenreInfo.rhythm || defaultRhythm

    const universalRules = `
üéØ F√ìRMULA DE HOOK DE SUCESSO 2024-2025

CARACTER√çSTICAS DE HOOK DE HIT:
1. ULTRA-CURTO: 4-8 palavras (m√°ximo 10 s√≠labas)
2. GRUDENTO: Gruda na cabe√ßa na primeira escuta
3. REPET√çVEL: F√°cil de repetir e lembrar
4. QUOTABLE: Vira bord√£o, cit√°vel
5. VIRAL: Potencial para TikTok/Reels

EXEMPLOS DE HOOKS DE HITS 2024-2025:
‚úì "C√™ me testa, olha e sorri" (visual, direto, 7 palavras)
‚úì "T√¥ no meu flow" (confiante, curto, 4 palavras)
‚úì "Saudade √© punhal no peito" (met√°fora concreta, 5 palavras)
‚úì "Voc√™ me faz sonhar" (simples, emocional, 4 palavras)

LINGUAGEM:
- Coloquial brasileira INTENSA
- G√≠rias e contra√ß√µes ("c√™", "t√¥", "pra", "n√©")
- Palavras do dia-a-dia
- ZERO vocabul√°rio rebuscado

M√âTRICA:
- Ideal: 4-8 palavras
- M√°ximo: 10 s√≠labas
- Deve caber em 2-3 segundos ao falar
- Respira√ß√£o natural

TESTE DE QUALIDADE:
- Consegue repetir 3x seguidas sem esquecer? ‚úì
- Soa natural em conversa? ‚úì
- Tem potencial viral? ‚úì
- Conecta com a letra? ‚úì
${subGenreInfo.subGenre ? `\n- Adapta ao ritmo de ${subGenreInfo.styleNote}? ‚úì` : `\n- Adapta ao ritmo de ${finalRhythm}? ‚úì`}
`

    const advancedModeRules = advancedMode
      ? `
üî• MODO AVAN√áADO - HOOK PREMIUM

CRIT√âRIOS DE HIT:
- Score m√≠nimo: 90/100 (padr√£o de hit)
- TikTok score m√≠nimo: 9/10
- Viralidade garantida
- Quotable e memor√°vel
- Adequado para r√°dio

TESTE RIGOROSO:
- Gruda em 3 segundos? ‚úì
- Vira bord√£o? ‚úì
- Funciona em karaok√™? ‚úì
- Potencial de meme? ‚úì
`
      : ""

    const metaforasRule = additionalRequirements
      ? `\n‚ö° REQUISITOS ESPECIAIS (PRIORIDADE M√ÅXIMA):
${additionalRequirements}

Se met√°foras especificadas, s√£o OBRIGAT√ìRIAS no hook.`
      : ""

    const prosodyRules = genreConfig
      ? `
üìä REGRAS DO G√äNERO (${genreConfig.name}):
- Ritmo: ${finalRhythm}
- M√°ximo: 10 s√≠labas
- Ideal: 4-8 palavras
- Estilo: ${genre}
`
      : ""

    const prompt = `${universalRules}
${advancedModeRules}
${metaforasRule}

üìù LETRA PARA ANALISAR:
${lyrics}

üéØ CONTEXTO CR√çTICO:
- Analise TODA a letra para capturar ess√™ncia
- Hook deve ser a ALMA desta composi√ß√£o em 4-8 palavras
- N√ÉO crie hook gen√©rico - √∫nico para ESTA letra
- Mantenha coer√™ncia total com tom e estilo
- Ritmo: ${finalRhythm}

${prosodyRules}

üéµ SUA TAREFA - CRIAR HOOK DE HIT:

1. GANCH√îMETRO (0-100)
   - Avalie: memorabilidade, repetibilidade, apelo emocional, viralidade
   - Padr√£o de hit: 85-100
   ${advancedMode ? "- Modo avan√ßado: m√≠nimo 90" : ""}

2. HOOK PRINCIPAL (4-8 palavras)
   - Gere 3 varia√ß√µes ultra-curtas:
     * Varia√ß√£o A: CHICLETE (repetitivo, grudento)
     * Varia√ß√£o B: BORD√ÉO (quotable, impactante)
     * Varia√ß√£o C: VIRAL (potencial TikTok m√°ximo)
   - Escolha a MELHOR (score mais alto)

3. TRANSFORMA√á√ïES SUGERIDAS
   - Pegue 2-3 trechos da letra
   - Transforme em hooks potenciais (4-8 palavras cada)
   - Mostre: Original ‚Üí Hook + Raz√£o

4. ESTRAT√âGIA DE POSICIONAMENTO
   - Onde usar (intro, refr√£o, ponte, outro)
   - Quantas repeti√ß√µes (m√≠nimo 3x na m√∫sica)
   - Como maximizar impacto

5. TESTE TIKTOK/REELS
   - Como soaria em clipe de 5 segundos
   - Potencial viral (1-10)
   ${advancedMode ? "- Modo avan√ßado: m√≠nimo 9/10" : ""}
   - Hashtags sugeridas

6. SUGEST√ïES DE MELHORIA
   - 3-4 sugest√µes para aumentar ganch√¥metro
   - Foco em simplicidade e viralidade

FORMATO JSON:
{
  "hook": "hook principal escolhido (4-8 palavras)",
  "hookVariations": [
    "varia√ß√£o A (chiclete)",
    "varia√ß√£o B (bord√£o)", 
    "varia√ß√£o C (viral)"
  ],
  "score": 90,
  "viralPotential": "alto/m√©dio/baixo",
  "suggestions": ["sugest√£o 1", "sugest√£o 2", "sugest√£o 3"],
  "placement": {
    "positions": ["intro", "refr√£o", "outro"],
    "repetitions": 4,
    "strategy": "estrat√©gia de maximiza√ß√£o"
  },
  "tiktokTest": {
    "description": "como soaria em 5 segundos",
    "score": 9,
    "hashtags": ["#hook1", "#hook2", "#hook3"]
  },
  "transformations": [
    {
      "original": "trecho original da letra",
      "hookVersion": "vers√£o hook (4-8 palavras)",
      "reason": "por que funciona como hook"
    }
  ],
  "commercialAnalysis": {
    "radioFriendly": true/false,
    "karaokeFriendly": true/false,
    "quotable": true/false,
    "memePotential": true/false
  }
}

CRIT√âRIOS DE SCORE:
- 95-100: Hit garantido, viral instant√¢neo
- 90-94: Muito forte, alto potencial comercial
- 85-89: Bom comercialmente, funciona bem
- <85: Refa√ßa, n√£o atinge padr√£o de hit

IMPORTANTE:
- Hook DEVE ter 4-8 palavras (m√°ximo 10 s√≠labas)
- Linguagem coloquial brasileira intensa
- Conecta perfeitamente com a letra
- Potencial viral m√°ximo
- F√°cil de repetir e lembrar

Retorne APENAS o JSON, sem markdown.`

    console.log("[v0] Gerando hook otimizado para hit 2024-2025...")

    const { text } = await generateText({
      model: "openai/gpt-4o",
      prompt: prompt,
      temperature: 0.85, // Alta criatividade para hooks virais
      maxTokens: 2000, // Added token limit to prevent excessive generation
    })

    let parsedResult
    try {
      const cleanText = text
        .replace(/```json\n?/g, "")
        .replace(/```\n?/g, "")
        .trim()
      parsedResult = JSON.parse(cleanText)
    } catch (parseError) {
      console.error("[v0] ‚ùå Erro ao fazer parse do JSON:", parseError)
      console.error("[v0] Texto recebido:", text)
      return NextResponse.json({ error: "Erro ao processar resposta da IA. Tente novamente." }, { status: 500 })
    }

    if (!parsedResult.hook) {
      console.error("[v0] ‚ùå Hook n√£o encontrado na resposta")
      return NextResponse.json({ error: "Hook n√£o foi gerado corretamente. Tente novamente." }, { status: 500 })
    }

    if (parsedResult.hook) {
      parsedResult.hook = capitalizeLines(parsedResult.hook)
    }
    if (parsedResult.hookVariations && Array.isArray(parsedResult.hookVariations)) {
      parsedResult.hookVariations = parsedResult.hookVariations.map((variation: string) => capitalizeLines(variation))
    }
    if (parsedResult.transformations && Array.isArray(parsedResult.transformations)) {
      parsedResult.transformations = parsedResult.transformations.map((t: any) => ({
        ...t,
        hookVersion: capitalizeLines(t.hookVersion),
      }))
    }

    console.log("[v0] ‚úÖ Hook de hit gerado com sucesso!")
    console.log(`[v0] üìä Score: ${parsedResult.score}/100`)
    console.log(`[v0] üéØ TikTok Score: ${parsedResult.tiktokTest?.score || 0}/10`)

    return NextResponse.json(parsedResult)
  } catch (error) {
    console.error("[v0] ‚ùå Erro ao gerar hook:", error)
    const errorMessage = error instanceof Error ? error.message : "Erro desconhecido"
    return NextResponse.json({ error: `Erro ao gerar hook: ${errorMessage}. Tente novamente.` }, { status: 500 })
  }
}
